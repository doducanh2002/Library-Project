# Database Configuration PostgreSQL for Docker
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres-library:5432/library_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:library_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:library_password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Liquibase Configuration
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:migration/master-changelog.xml
spring.liquibase.drop-first=false

# Logging
logging.level.liquibase=INFO
logging.level.org.springframework.boot.autoconfigure.liquibase=INFO
logging.level.com.library=INFO

# Redis Configuration
spring.data.redis.host=${SPRING_REDIS_HOST:redis}
spring.data.redis.port=${SPRING_REDIS_PORT:6379}
spring.data.redis.password=
spring.data.redis.database=0
spring.data.redis.timeout=60000

# CORS Configuration
app.cors.allowed-origins=http://localhost:3000,http://localhost:3001,http://api-gateway:8080
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.exposed-headers=Authorization
app.cors.allow-credentials=true
app.cors.max-age=3600

# Service URLs for microservices communication
auth.service.url=${AUTH_SERVICE_URL:http://authentication-service:8081}
file.service.url=${FILE_SERVICE_URL:http://file-storage-service:8083}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always